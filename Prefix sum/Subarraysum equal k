Approach==>
We will keep storing the prefix sum in the map and check did we find prefix sum-k in the map
previously? if yes then we will increase the result by as many times as we have seen it in the map;
eg[1,-1,0]
class Solution {
public:
    int subarraySum(vector<int>& nums, int k) {
     unordered_map<int,int>mpp;
     int ans=0;
     int cummulativesum=0;
     mpp.insert({0,1});  
     for(int i=0;i<nums.size();i++)
     {

       cummulativesum+=nums[i];
       if(mpp.find(cummulativesum-k)!=mpp.end())
       {
        ans+=mpp[cummulativesum-k];
       }
       mpp[cummulativesum]++;
     }
     return ans; 
    }
};
